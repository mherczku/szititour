package hu.hm.szititourbackend.util

object MessageConstants {


    //! SUCCESS MESSAGES:
    const val AUTH_SUCCESS = "AUTH_SUCCESS"
    const val DELETE_TEAM_REQUESTED = "DELETE_TEAM_REQUESTED"
    const val DIRECT_NOTIFICATION_SENT = "DIRECT_NOTIFICATION_SENT"
    const val EMAIL_VERIFIED = "EMAIL_VERIFIED"
    const val LOGIN_SUCCESS = "LOGIN_SUCCESS"
    const val LOGOUT_SUCCESS = "LOGOUT_SUCCESS"
    const val PASSWORD_CHANGED = "PASSWORD_CHANGED"
    const val PASSWORD_CHANGE_EMAIL_SENT = "PASSWORD_CHANGE_EMAIL_SENT"
    const val REGISTER_SUCCESS = "REGISTER_SUCCESS"
    const val REGISTER_SUCCESS_GOOGLE = "REGISTER_SUCCESS_GOOGLE"
    const val SUCCESS = "SUCCESS"
    const val TEAM_DELETE_SUCCESS = "TEAM_DELETE_SUCCESS"
    const val TOPIC_NOTIFICATION_SENT = "TOPIC_NOTIFICATION_SENT"


    //! ERROR MESSAGES:
    const val ANSWER_NOT_FOUND = "ANSWER_NOT_FOUND"
    const val APPLICATION_NOT_ACCEPTED = "APPLICATION_NOT_ACCEPTED"
    const val APPLICATION_NOT_FOUND = "APPLICATION_NOT_FOUND"
    const val AUTH_EMPTY_TOKENID = "AUTH_EMPTY_TOKENID"
    const val AUTH_INVALID_TOKEN_TYPE = "AUTH_INVALID_TOKEN_TYPE"
    const val AUTH_TOKEN_BAD_RESOURCE_ID = "AUTH_TOKEN_BAD_RESOURCE_ID"
    const val AUTH_TOKEN_EMPTY = "AUTH_TOKEN_EMPTY"
    const val AUTH_TOKEN_EXPIRED = "AUTH_TOKEN_EXPIRED"
    const val AUTH_TOKEN_INVALID = "AUTH_TOKEN_INVALID"
    const val AUTH_TOKENID_NOT_FOUND = "AUTH_TOKENID_NOT_FOUND"
    const val BAD_CREDENTIALS = "BAD_CREDENTIALS"
    const val CANNOT_ACTIVATE_RIDDLE = "CANNOT_ACTIVATE_RIDDLE"
    const val CANNOT_APPLY_ACTIVE_GAME = "CANNOT_APPLY_ACTIVE_GAME"
    const val CANNOT_CANCEL_ACTIVE = "CANNOT_CANCEL_ACTIVE"
    const val CANNOT_CANCEL_REFUSED = "CANNOT_CANCEL_REFUSED"
    const val EMAIL_EMPTY = "EMAIL_EMPTY"
    const val EMAIL_INVALID = "EMAIL_INVALID"
    const val EMAIL_INVALID_TOKEN_TYPE = "EMAIL_INVALID_TOKEN_TYPE"
    const val EMAIL_NOT_VERIFIED = "EMAIL_NOT_VERIFIED"
    const val EMAIL_NOT_VERIFIED_DELETE = "EMAIL_NOT_VERIFIED_DELETE"
    const val EMAIL_SEND_FAILED_TEMPLATE_NULL = "EMAIL_SEND_FAILED_TEMPLATE_NULL"
    const val EMAIL_TAKEN = "EMAIL_TAKEN"
    const val EMAIL_TOKEN_EXPIRED = "EMAIL_TOKEN_EXPIRED"
    const val EMPTY_CREDENTIALS = "EMPTY_CREDENTIALS"
    const val GAME_GAMEID_QUESTIONID_NULL = "GAME_GAMEID_QUESTIONID_NULL"
    const val GAME_INACTIVE = "GAME_INACTIVE"
    const val GAME_NOT_FOUND = "GAME_NOT_FOUND"
    const val GAME_TITLE_TAKEN = "GAME_TITLE_TAKEN"
    const val GOOGLE_NOT_VERIFIED = "GOOGLE_NOT_VERIFIED"
    const val GOOGLE_VALIDATION_FAILED = "GOOGLE_VALIDATION_FAILED"
    const val IMG_SAVE_FAILED = "IMG_SAVE_FAILED"
    const val IMG_FORMAT_NOT_SUPPORTED = "IMG_FORMAT_NOT_SUPPORTED"
    const val INVALID_GOOGLE_TOKEN = "INVALID_GOOGLE_TOKEN"
    const val INVALID_NOTIFICATION = "INVALID_NOTIFICATION"
    const val MISSING_REQUEST_VALUE = "MISSING_REQUEST_VALUE"
    const val PASSWORD_EMPTY = "PASSWORD_EMPTY"
    const val PASSWORD_INVALID = "PASSWORD_INVALID"
    const val PASSWORD_TOKEN_INVALID = "PASSWORD_TOKEN_INVALID"
    const val PASSWORD_INVALID_TOKEN_TYPE = "PASSWORD_INVALID_TOKEN_TYPE"
    const val PASSWORD_TOKEN_EXPIRED = "PASSWORD_TOKEN_EXPIRED"
    const val PLACE_NOT_FOUND = "PLACE_NOT_FOUND"
    const val PLACE_NOT_FOUND_CONVERT = "PLACE_NOT_FOUND_CONVERT"
    const val QUESTION_NOT_FOUND = "QUESTION_NOT_FOUND"
    const val REQUEST_METHOD_NOT_SUPPORTED = "REQUEST_METHOD_NOT_SUPPORTED"
    const val RESOURCE_DIRECTORY_NOT_FOUND = "RESOURCE_DIRECTORY_NOT_FOUND"
    const val RESOURCE_IMG_NOT_FOUND = "RESOURCE_IMG_NOT_FOUND"
    const val TEAM_ALREADY_APPLIED = "TEAM_ALREADY_APPLIED"
    const val TEAM_DELETE_INVALID_TOKEN_TYPE = "TEAM_DELETE_INVALID_TOKEN_TYPE"
    const val TEAM_DELETE_TOKEN_EXPIRED = "TEAM_DELETE_TOKEN_EXPIRED"
    const val TEAM_DELETE_TOKEN_INVALID = "TEAM_DELETE_TOKEN_INVALID"
    const val TEAM_INACTIVE = "TEAM_INACTIVE"
    const val TEAM_NOT_FOUND = "TEAM_NOT_FOUND"
    const val UNKNOWN = "UNKNOWN"
    const val UPLOAD_SIZE_LIMIT = "UPLOAD_SIZE_LIMIT"
    const val VERIFICATION_FAILED = "VERIFICATION_FAILED"

}